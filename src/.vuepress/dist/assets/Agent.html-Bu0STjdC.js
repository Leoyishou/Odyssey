import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as l,f as a,o as s}from"./app-DyPYfXuN.js";const i={};function o(c,t){return s(),l("div",null,t[0]||(t[0]=[a('<h2 id="tool" tabindex="-1"><a class="header-anchor" href="#tool"><span>tool</span></a></h2><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-0" disabled="disabled"><label class="task-list-item-label" for="task-item-0"> 多参数输入</label><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-1" disabled="disabled"><label class="task-list-item-label" for="task-item-1"> 至少得是 agen-type</label></li></ul></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-2" disabled="disabled"><label class="task-list-item-label" for="task-item-2"> 参数检查，抛出异常</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-3" disabled="disabled"><label class="task-list-item-label" for="task-item-3"> catch 异常，作为 result 返回给用户</label></li></ul><hr><p>拿到结果，保存记忆，带记忆调用？还是迭代调用</p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-4" disabled="disabled"><label class="task-list-item-label" for="task-item-4"> 异常处理，补足参数</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-5" disabled="disabled"><label class="task-list-item-label" for="task-item-5"> 重新调用</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-6" disabled="disabled"><label class="task-list-item-label" for="task-item-6"> 参数检验<br> @model_validator(mode=&#39;before&#39;)<br> Pydantic 是一个 Python 库，它用于数据解析和验证。它广泛应用于快速创建数据模型，</label></li></ul>',5)]))}const n=e(i,[["render",o],["__file","Agent.html.vue"]]),r=JSON.parse(`{"path":"/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/AIGC/Agent.html","title":"Agent","lang":"zh-CN","frontmatter":{"draw":null,"tags":[],"title":"Agent","date created":"2023-11-23T00:00:00.000Z","date modified":"2024-11-12T00:00:00.000Z","description":"tool 多参数输入 至少得是 agen-type 参数检查，抛出异常 catch 异常，作为 result 返回给用户 拿到结果，保存记忆，带记忆调用？还是迭代调用 异常处理，补足参数 重新调用 参数检验 @model_validator(mode='before') Pydantic 是一个 Python 库，它用于数据解析和验证。它广泛应用于快速...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/AIGC/Agent.html"}],["meta",{"property":"og:site_name","content":"转了码的刘公子"}],["meta",{"property":"og:title","content":"Agent"}],["meta",{"property":"og:description","content":"tool 多参数输入 至少得是 agen-type 参数检查，抛出异常 catch 异常，作为 result 返回给用户 拿到结果，保存记忆，带记忆调用？还是迭代调用 异常处理，补足参数 重新调用 参数检验 @model_validator(mode='before') Pydantic 是一个 Python 库，它用于数据解析和验证。它广泛应用于快速..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-24T16:17:22.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-24T16:17:22.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Agent\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-11-24T16:17:22.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"转了码的刘公子\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"tool","slug":"tool","link":"#tool","children":[]}],"git":{"createdTime":1732465042000,"updatedTime":1732465042000,"contributors":[{"name":"Luis","email":"liuysh20@gmail.com","commits":1}]},"readingTime":{"minutes":0.38,"words":113},"filePathRelative":"2 第二大脑/1 节点/CS/人工智能/AIGC/Agent.md","localizedDate":"2024年11月25日","autoDesc":true}`);export{n as comp,r as data};
